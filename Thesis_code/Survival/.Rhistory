students$g1tmathss <- as.numeric(students$g1tmathss)
students$g1treadss <- as.numeric(students$g1treadss)
students$g1tlistss <- as.numeric(students$g1tlistss)
students$g1wordskillss <- as.numeric(students$g1wordskillss)
students$gktmathss <- as.numeric(students$gktmathss)
students$gktreadss <- as.numeric(students$gktreadss)
students$gktlistss <- as.numeric(students$gktlistss)
students$gkwordskillss <- as.numeric(students$gkwordskillss)
students$g2tmathss <- as.numeric(students$g2tmathss)
students$g3tmathss <- as.numeric(students$g3tmathss)
students <- students %>%
rename(flagsgk = var6, flagsg1 = var7, flagsg2 = var8, flagsg3 = var9)
students_peereffects_k1 <- students %>%
filter(yearsstar != 0,  flagsgk ==1) %>%
mutate(did_leave = case_when(flagsg1 == 0 ~ 1, flagsg1 == 1 ~ 0)) %>%
mutate(total_math_reading_k = gktmathss + gktreadss + gktlistss + gkwordskillss, total_math_reading_1 = g1tmathss + g1treadss + g1tlistss + g1wordskillss, switched_schools = case_when(gkschid == g1schid ~ 0, gkschid != g1schid ~ 1), gkt_masters = case_when(gkthighdegree == 2 | gkthighdegree == 1 ~ 0, gkthighdegree >= 3 ~ 1), g1t_masters = case_when(g1thighdegree == 2 | g1thighdegree == 1 ~ 0, g1thighdegree >= 3 ~ 1))
# Prop Leavers
students_peereffects_k1 <- students_peereffects_k1 %>%
group_by(gkschid, gktchid) %>%
mutate(prop_leavers = (sum(did_leave)/gkclasssize)*100) %>%
mutate(log_prop_leavers = log(prop_leavers))
# Leaver Means & Variances - Brute Force Method
students_peereffects_k1 <- students_peereffects_k1 %>%
group_by(gkschid, gktchid) %>%
mutate(leaver_scores = case_when(did_leave == 1 ~ total_math_reading_k, did_leave == 0 ~ 0), leaver_score_exists = case_when(did_leave == 1 & total_math_reading_k >= 0 ~ 1, did_leave == 0 ~ 0)) %>%
mutate(leaver_mean = sum(leaver_scores, na.rm = T)/sum(leaver_score_exists, na.rm = T), leaver_variance = var(leaver_scores[leaver_scores!=0], na.rm=T))
leave_dta <- students_peereffects_k1 %>%
filter(flagsg1 == 0)
dep_abl <- ggplot(data=leave_dta[!(is.na(leave_dta$gkfreelunch)), ], aes(x=total_math_reading_k, group=as.factor(gkfreelunch), fill=as.factor(gkfreelunch))) +
geom_density(adjust=1.5, alpha=.4) + labs(title = "Distribution of Total Kindergarten Grade Test Scores by Free Lunch Status", subtitle = "Among Departed Students") + xlab("Total Kindergarten Grade Test Score") + ylab("Density") + theme_pubr() + scale_fill_nejm(name = "Free Lunch Status", labels = c("Recieves Free Lunch", "Non Free Lunch")) + xlim(1500, 2750) + theme(plot.title = element_text(size=13))
ggsave("Departed_Ability.pdf", plot = dep_abl, path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
leave_dta[!(is.na(leave_dta$gkfreelunch)), ] %>%
filter(gkfreelunch == 1) %>%
select(total_math_reading_k) %>%
summary(total_math_reading_k)
leave_dta[!(is.na(leave_dta$gkfreelunch)), ] %>%
filter(gkfreelunch == 2) %>%
select(total_math_reading_k) %>%
summary(total_math_reading_k)
# Leave one out mean for k
students_peereffects_k1 <- students_peereffects_k1 %>%
group_by(gkschid, gktchid) %>%
mutate(staying_score_exists = case_when(did_leave == 0 & total_math_reading_k >= 0 ~ 1, did_leave == 1 ~ 0)) %>%
mutate(leave_one_out_avgk = (sum(total_math_reading_k[staying_score_exists==1], na.rm = T)-total_math_reading_k) / (sum(staying_score_exists, na.rm = T) -1))
# Leave one out mean for g1
# need to get average of all kids so no filtering for k cohort
leave_o1 <- students %>%
mutate(total_math_reading_1 = g1tmathss + g1treadss + g1tlistss + g1wordskillss) %>%
group_by(g1schid, g1tchid) %>%
mutate(leave_one_out_avg1 = (sum(total_math_reading_1, na.rm = T)-total_math_reading_1)/(length(total_math_reading_1[!is.na(total_math_reading_1)])-1)) %>%
select(stdntid, leave_one_out_avg1, g1tchid, g1schid)
students_peereffects_k1 <- merge(students_peereffects_k1,leave_o1,by=c("stdntid", "g1tchid", "g1schid"))
# School Characteristics
schools_1 <- schools %>%
select(schid, var4, var21, var22) %>%
rename(g1schid = "schid", flag_s1 = "var4", g1_fl = "var21", g1_bus = "var22") %>%
filter(flag_s1 == 1)
schools_k <- schools %>%
select(schid, var2, var3, var9, var10) %>%
rename(gkschid = "schid", grdrange = "var2", flag_sk = "var3", gk_fl = "var9", gk_bus = "var10") %>%
filter(flag_sk == 1)
students_peereffects_k1 <- merge(students_peereffects_k1,schools_k,by="gkschid")
write.csv(students_peereffects_k1,"/Users/Sanscubed/Desktop/Thesis/Thesis_code/Clustering/PeerEffects_K1_ClusteringData.csv", row.names = FALSE)
students_peereffects_k1 <- merge(students_peereffects_k1,schools_1,by="g1schid")
fl_test_k <- ggplot(data=students_peereffects_k1[!(is.na(students_peereffects_k1$gkfreelunch)), ], aes(x=total_math_reading_k, group=as.factor(gkfreelunch), fill=as.factor(gkfreelunch))) +
geom_density(adjust=1.5, alpha=.4) + labs(title = "Distribution of Total Kindergarten \nTest Scores by Free Lunch Status") + xlab("Total Kindergarten Test Score") + ylab("Density") + theme_pubr() + scale_fill_nejm(name = "Free Lunch Status in Kindergarten", labels = c("Recieves Free Lunch", "Non Free Lunch")) + xlim(1500, 2750) + theme(plot.title = element_text(size=13))
fl_test_1 <- ggplot(data=students_peereffects_k1[!(is.na(students_peereffects_k1$g1freelunch)), ], aes(x=total_math_reading_1, group=as.factor(g1freelunch), fill=as.factor(g1freelunch))) +
geom_density(adjust=1.5, alpha=.4) + labs(title = "Distribution of Total First Grade \nTest Scores by Free Lunch Status") + xlab("Total First Grade Test Score") + ylab("Density") + theme_pubr() + scale_fill_nejm(name = "Free Lunch Status in First Grade", labels = c("Recieves Free Lunch", "Non Free Lunch")) + xlim(1500, 2750) + theme(plot.title = element_text(size=13))
arranged <- ggarrange(fl_test_k, fl_test_1, ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
ggsave("FL_Ability.pdf", plot = arranged, path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
# Regression Data
peereffect_k1_reg_data <- students_peereffects_k1 %>%
filter(flagsgk == 1 & flagsg1 == 1) %>%
filter(gkschid == g1schid) %>%
filter(gkfreelunch == g1freelunch) %>%
mutate(is_smallk = case_when(gkclasstype == 1 ~ 1, TRUE ~ 0), is_regulark = case_when(gkclasstype == 2 ~ 1, TRUE ~ 0), is_rak = case_when(gkclasstype == 3 ~ 1, TRUE ~ 0), is_small1 = case_when(g1classtype == 1 ~ 1, TRUE ~ 0), is_regular1 = case_when(g1classtype == 2 ~ 1, TRUE ~ 0), is_ra1 = case_when(g1classtype == 3 ~ 1, TRUE ~ 0))
peereffects_no_fe <- felm(total_math_reading_1 ~ total_math_reading_k + prop_leavers + leaver_mean + leaver_variance + prop_leavers * leaver_mean + prop_leavers * leaver_variance + as.factor(is_smallk) + as.factor(is_small1) + leave_one_out_avgk + as.factor(race) + as.factor(gender) + as.factor(gkfreelunch) + gkabsent + g1absent + as.factor(gkspeced) + as.factor(gkspecin) + as.factor(g1speced) + as.factor(g1specin) + as.factor(gktrace) + as.factor(gkt_masters) + gktyears + as.factor(g1trace) + as.factor(g1t_masters) + g1tyears + as.factor(gksurban) + as.factor(grdrange) + gk_fl + gk_bus + g1_fl + g1_bus| 0 | 0 |gktchid, data = peereffect_k1_reg_data)
peereffects_with_fe <- felm(total_math_reading_1 ~ total_math_reading_k + prop_leavers + leaver_mean + leaver_variance + prop_leavers * leaver_mean + prop_leavers * leaver_variance + as.factor(is_smallk) + as.factor(is_small1) + leave_one_out_avgk + as.factor(race) + as.factor(gender) + as.factor(gkfreelunch) + gkabsent + g1absent + as.factor(gkspeced) + as.factor(gkspecin) + as.factor(g1speced) + as.factor(g1specin) + as.factor(gktrace) + as.factor(gkt_masters) + gktyears + as.factor(g1trace) + as.factor(g1t_masters) + g1tyears| gkschid | 0 |gktchid, data = peereffect_k1_reg_data)
peereffects_with_fe_noprop <- felm(total_math_reading_1 ~ total_math_reading_k + leaver_mean + as.factor(is_smallk) + as.factor(is_small1) + leave_one_out_avgk + as.factor(race) + as.factor(gender) + as.factor(gkfreelunch) + gkabsent + g1absent + as.factor(gkspeced) + as.factor(gkspecin) + as.factor(g1speced) + as.factor(g1specin) + as.factor(gktrace) + as.factor(gkt_masters) + gktyears + as.factor(g1trace) + as.factor(g1t_masters) + g1tyears| gkschid | 0 |gktchid, data = peereffect_k1_reg_data)
peereffects_with_fe_onlyprop <- felm(total_math_reading_1 ~ total_math_reading_k + prop_leavers + leaver_mean + leaver_variance + prop_leavers * leaver_mean + prop_leavers * leaver_variance + as.factor(is_smallk) + as.factor(is_small1) + leave_one_out_avgk + as.factor(race) + as.factor(gender) + as.factor(gkfreelunch) + gkabsent + g1absent + as.factor(gkspeced) + as.factor(gkspecin) + as.factor(g1speced) + as.factor(g1specin) + as.factor(gktrace) + as.factor(gkt_masters) + gktyears + as.factor(g1trace) + as.factor(g1t_masters) + g1tyears| gkschid | 0 |gktchid, data = peereffect_k1_reg_data)
ggplot(peereffect_k1_reg_data, aes(x=leaver_mean, y=total_math_reading_1)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) + labs(title = "Own Test Score vs. Leaver Mean Test Score") + theme_pubr() + ggpubr::stat_cor(method="pearson")
ggplot(peereffect_k1_reg_data, aes(x=leave_one_out_avgk, y=total_math_reading_1)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) + labs(title = "Own Test Score vs. Kindergarten Peer Mean Test Score")  + theme_pubr() + ggpubr::stat_cor(method="pearson")
ggplot(peereffect_k1_reg_data, aes(x=total_math_reading_k, y=total_math_reading_1)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) + labs(title = "Own Test Score vs. Own Kindergarten Test Score") + theme_pubr() + ggpubr::stat_cor(method="pearson")
ggplot(peereffect_k1_reg_data, aes(x=prop_leavers, y=leaver_mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) + labs(title = "Proportion of Class who Left vs. Mean Test Score of Leavers") + theme_pubr() + ggpubr::stat_cor(method="pearson")
leave_k <- ggplot(peereffect_k1_reg_data, aes(x=prop_leavers, y=total_math_reading_1)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) + labs(title = "Proportion of Class who Left \nvs. Own First Grade Test Score") + theme_pubr() + ggpubr::stat_cor(method="pearson" , label.x = 30, label.y = 2650) + xlab("Proportion of Class \nWho Left in Kindergarten") + ylab("Total First Grade Test Score") + ylim(1600, 2650)
leave_1 <- ggplot(peereffect_k1_reg_data, aes(x=prop_leavers, y=total_math_reading_k)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) + labs(title = "Proportion of Class who Left vs. \nOwn Kindergarten Test Score ") + theme_pubr() + ggpubr::stat_cor(method="pearson", label.x = 30, label.y = 2650) + ylim(1600, 2650) + xlab("Proportion of Class \nWho Left in Kindergarten") + ylab("Total Kindergarten Grade Test Score")
arranged <- ggarrange(leave_k, leave_1, ncol=2, nrow=1)
ggsave("PropLeave.pdf", plot = arranged, path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
leave_k <- ggplot(peereffect_k1_reg_data, aes(x=leave_one_out_avgk, y=total_math_reading_k)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) + labs(title = "Leave-One-Out Average of \nPeers Kindergarten Test Scores \nvs. Own Test Score") + theme_pubr() + ggpubr::stat_cor(method="pearson", label.x = 1800, label.y = 2600) + ylim(1600, 2600) + xlim(1600, 2200) + xlab("Leave-One-Out Average of Peers \nKindergarten Test Scores") + ylab("Total Own Kindergarten Test Score")
leave_1 <- ggplot(peereffect_k1_reg_data, aes(x=leaver_mean, y=total_math_reading_k)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) + labs(title = "Own Test Score \nvs. Leaver Mean Test Score") + theme_pubr() + ggpubr::stat_cor(method="pearson", label.x = 1800, label.y = 2600) + ylim(1600, 2600) + xlab("Leaver's Mean \nKindergarten Test Score") + ylab("Total Own Kindergarten Test Score") + xlim(1600, 2200)
arranged <- ggarrange(leave_k, leave_1, ncol=2, nrow=1)
ggsave("XCorr.pdf", plot = arranged, path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
fulltable <- stargazer(peereffects_no_fe, peereffects_with_fe, peereffects_with_fe_noprop, peereffects_with_fe_onlyprop, title="Coefficient-Level Estimates for Peer Effects among Kindergarten Entry Cohort", align=TRUE, type = 'latex', header = FALSE, single.row = FALSE, column.sep.width = "3pt", font.size = "small", omit.stat=c("f"), model.names = FALSE, notes.align = "l", omit = c("gender", "race", "gktyears", "gkabsent", "grdrange", "gk_fl", "gk_bus", "gkfreelunch", "g1absent", "gkspeced", "gkspecin", 'g1speced', "g1specin", "gktrace", "gkt_masters", "g1trace",  "g1t_masters",  "g1tyears",  "gksurban", "g1_fl", "g1_bus"), add.lines=list(c("Mean pm SD of Response",""),c("Fixed Effects", "No", "Yes", "Yes", "Yes")))
compressed_table <- stargazer(peereffects_no_fe, peereffects_with_fe, peereffects_with_fe_noprop, peereffects_with_fe_onlyprop, title="Coefficient-Level Estimates for Peer Effects among Kindergarten Entry Cohort", align=TRUE, type = 'latex', header = FALSE, single.row = FALSE, column.sep.width = "3pt", font.size = "small", omit.stat=c("f"), model.names = FALSE, notes.align = "l", omit = c("total_math_reading_k" , "prop_leavers" , "leaver_mean" , "leaver_variance", "is_smallk", "is_small1" , "leave_one_out_avgk", "gkfreelunch"), add.lines=list(c("Mean pm SD of Response",""),c("Fixed Effects", "No", "Yes", "Yes", "Yes")))
library(tidyverse)
library(dplyr)
library(flextable)
library(grid)
library(gridExtra)
library(cowplot)
library(stargazer)
library(scales)
library(pROC)
library(patchwork)
library(survminer)
library(ggsci)
library(survival)
library(foreign)
library(kableExtra)
library(ggplot2)
library(broom)
library(GGally)
library(tidyr)
library(knitr)
library(xtable)
students <- read.table("/Users/Sanscubed/Desktop/Thesis/Thesis_data/STAR_Archive/STAR_Students.tab", header = T, sep = "\t", fill = TRUE)
comparison_students <- read.table("/Users/Sanscubed/Desktop/Thesis/Thesis_data/STAR_Archive/Comparison_Students.tab", header = T, sep = "\t", fill = TRUE)
schools_spss <- read.spss("/Users/Sanscubed/Desktop/Thesis/Thesis_data/STAR_Archive/Project STAR/STAR_K-3_Schools.sav", to.data.frame=TRUE)
schools <- read.table("/Users/Sanscubed/Desktop/Thesis/Thesis_data/STAR_Archive/STAR_K-3_Schools.tab", header = T, sep = "\t", fill = TRUE)
# Converting test scores to numeric types
students$g1tmathss <- as.numeric(students$g1tmathss)
students$g1treadss <- as.numeric(students$g1treadss)
students$g1tlistss <- as.numeric(students$g1tlistss)
students$g1wordskillss <- as.numeric(students$g1wordskillss)
students$gktmathss <- as.numeric(students$gktmathss)
students$gktreadss <- as.numeric(students$gktreadss)
students$gktlistss <- as.numeric(students$gktlistss)
students$gkwordskillss <- as.numeric(students$gkwordskillss)
students$g2tmathss <- as.numeric(students$g2tmathss)
students$g3tmathss <- as.numeric(students$g3tmathss)
students <- students %>%
rename(flagsgk = var6, flagsg1 = var7, flagsg2 = var8, flagsg3 = var9)
students_survival <- students %>%
filter(yearsstar != 0, gkschid != 128068 | gkschid != 180344 | gkschid != 205489 | gkschid != 216536 | gkschid != 244818)
survival_k_entry <- students %>%
filter(flagsgk == 1) %>%
mutate(did_leave = case_when(yearsstar == 4 ~ 0, yearsstar != 4 ~ 1), when_first_leave = case_when(flagsg1 == 1 & flagsg2 == 1 & flagsg3 == 1 ~ 0,flagsg1 == 0 ~ 1, flagsg2 == 0 & flagsg1 == 1 ~ 2, flagsg1 == 1 & flagsg2 == 1 & flagsg3 == 0 ~ 3)) %>%
mutate(years_until_first_leave = case_when(when_first_leave == 0 ~ 4, when_first_leave == 1 ~ 1, when_first_leave == 2 ~ 2, when_first_leave == 3 ~ 3))
# Using Mine
fit_ct <- survfit(Surv(years_until_first_leave, did_leave) ~ gkfreelunch, data = survival_k_entry)
income_plot <- ggsurvplot(fit_ct, data = survival_k_entry, pval = TRUE, title = "Survival Probabilities by Free Lunch Status in Kindergarten", subtitle = "Among Kindergarten Entry Cohort", risk.table = TRUE,
tables.height = 0.2, risk.table.title = "Number at risk:",
tables.theme = theme_cleantable(),
xlab = "Years in Experiment", ylab = "Estimated Survival Probability",
conf.int = T, censor = T,legend.labs = c("Free Lunch", "Non-Free Lunch"), palette = "nejm", ggtheme = theme_pubr())
ggsave("Survival_Income.pdf", plot = ggarrange(income_plot$plot, income_plot$table, nrow=2, ncol=1, heights=c(3,1)), path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
survival_k_entry <- survival_k_entry %>%
mutate(total_math_reading_k = gktmathss + gktreadss + gktlistss + gkwordskillss) %>%
mutate(gk_ability_quartile = ntile(total_math_reading_k, 100)) %>%
mutate(gk_ability_category = case_when(gk_ability_quartile <= 25 ~ 1, gk_ability_quartile > 25 & gk_ability_quartile < 75 ~ 2, gk_ability_quartile >= 75 ~ 3))
fit_ct <- survfit(Surv(years_until_first_leave, did_leave) ~ gk_ability_category, data = survival_k_entry)
ability_plot <- ggsurvplot(fit_ct, data = survival_k_entry, title = "Survival Probabilities by Kindergarten Test Scores", subtitle = "Among Kindergarten Entry Cohort",
xlab = "Years in Experiment", ylab = "Estimated Survival Probability",
conf.int = T, censor = T,legend.labs = c("25th Percentile or Below", "Between 25th-75th Percentiles", "75th+ Percentile"), risk.table = TRUE,
tables.height = 0.5, risk.table.title = "Number at risk:",
tables.theme = theme_cleantable(), palette = "nejm", ggtheme = theme_pubr(), pval = TRUE)
ggsave("Survival_Ability.pdf", plot = ggarrange(ability_plot$plot, ability_plot$table, nrow=2, ncol=1, heights=c(3,1)), path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
# Using Mine
fit_ct <- survfit(Surv(years_until_first_leave, did_leave) ~ gkclasstype, data = survival_k_entry)
classtype_plot <- ggsurvplot(fit_ct, data = survival_k_entry, title = "Survival Probabilities by Kindergarten Class Type", subtitle = "Among Kindergarten Entry Cohort",
xlab = "Years in Experiment", ylab = "Estimated Survival Probability",
conf.int = T, censor = T,legend.labs = c("Small", "Regular", "Aide"), risk.table = TRUE,
tables.height = 0.5, risk.table.title = "Number at risk:",
tables.theme = theme_cleantable(), palette = "nejm", ggtheme = theme_pubr(), pval = TRUE)
ggsave("Survival_ClassType.pdf", plot = ggarrange(classtype_plot$plot, classtype_plot$table, nrow=2, ncol=1, heights=c(3,1)), path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
fit_ct <- survfit(Surv(years_until_first_leave, did_leave) ~ gksurban, data = survival_k_entry)
schoolurb_plot <- ggsurvplot(fit_ct, data = survival_k_entry, title = "Survival Probabilities by Kindergarten School Urbanicity", subtitle = "Among Kindergarten Entry Cohort",
xlab = "Years in Experiment", ylab = "Estimated Survival Probability",
conf.int = T, censor = T,legend.labs = c("Inner City", "Suburban", "Rural", "Urban"), risk.table = TRUE,
tables.height = 0.5, risk.table.title = "Number at risk:",
tables.theme = theme_cleantable(), palette = "nejm", ggtheme = theme_pubr(), pval = TRUE)
ggsave("Survival_SchoolType.pdf", plot = ggarrange(schoolurb_plot$plot, schoolurb_plot$table, nrow=2, ncol=1, heights=c(3,1)), path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
# -	Vars of interest:
# switched classes (disaggregate into stayed same, switched from regular to small, switched from small to larger),
#
# -	Controls:
# kindergarten school grade range, exit school grade range, if the school left the experiment, percent students receiving free/reduced lunch in K, percent students bused in K
survival_k_entry <- survival_k_entry %>%
mutate(switched_schools = case_when(when_first_leave == 0 ~ gkschid!=g3schid, when_first_leave == 1 ~ FALSE, when_first_leave == 2 ~ gkschid!=g1schid, when_first_leave == 3 ~ gkschid!=g2schid), switched_classes = case_when(when_first_leave == 0 ~ gkclasstype!=g3classtype, when_first_leave == 1 ~ FALSE, when_first_leave == 2 ~ gkclasstype!=g1classtype, when_first_leave == 3 ~ gkclasstype!=g1classtype))
schools_k <- schools %>%
select(schid, var2, var3, var9, var10) %>%
rename(gkschid = "schid", grdrange = "var2", flag_sk = "var3", gk_fl = "var9", gk_bus = "var10") %>%
filter(flag_sk == 1)
regression_surv_k <- merge(survival_k_entry,schools_k,by="gkschid")
# Model of attrition between k to 1st grade, note teacher gender not controlled for as there are only female teachers in gk
weibull_k_entry <- survreg(Surv(years_until_first_leave, did_leave)  ~ as.factor(gkfreelunch) + as.factor(gksurban)  + as.factor(gkclasstype)  + as.factor(gk_ability_category) + as.factor(gender) + as.factor(race) + gktyears + as.factor(gkspeced) + as.factor(gkspecin) + gkabsent + as.factor(grdrange) + gk_fl + gk_bus,
data=regression_surv_k, dist = "weibull")
#weibull_k_entry$coefficients <- exp(weibull_k_entry$coefficients)
#Model summary
# summary(weibull_k_entry)
# Model for those who were able to switch classes/schools
regression_surv_k2 <- regression_surv_k %>%
filter(when_first_leave != 1)
weibull_k_entry_nonfirst <- survreg(Surv(years_until_first_leave, did_leave)  ~ as.factor(gkfreelunch) + as.factor(gksurban) + as.factor(switched_schools) + as.factor(gkclasstype) + as.factor(switched_classes) + as.factor(gk_ability_category) + as.factor(gender) + as.factor(race) + gktyears + as.factor(gkspeced) + as.factor(gkspecin) + gkabsent + as.factor(grdrange) + gk_fl + gk_bus,
data=regression_surv_k2, dist = "weibull")
#summary(weibull_k_entry_nonfirst)
complete_table <- stargazer(weibull_k_entry, weibull_k_entry_nonfirst, title="Coefficient-Level Estimates for AFT Model of Attrition for Kindergarten Entry Cohort", align=TRUE, type = 'latex', header = FALSE, single.row = FALSE, column.sep.width = "3pt", font.size = "small", omit.stat=c("f"), model.names = FALSE, notes.align = "l", covariate.labels = c("Non-Free Lunch", "School Suburban", "School Rural", "School Urban", "Switched Schools", "Regular Class", "Regular Class w/ Aide", "Switched Class Types", "Kindergarten Test Score Between 25th-75th Percentile", "Kindergarten Test Score Above 75th Percentile", "Student Gender: Female", "Student Race: Black", "Student Race: Asian", "Student Race: Hispanic", "Student Race: Native American", "Student Race: Other", "Teacher Experience (yrs.)", "Not Special Education", "Not Pulled Out for Special Instruction", "Days Absent", "Kindergarten School K-4", "Kindergarten School K-5", "Kindergarten School K-6", "Kindergarten School K-7", "Kindergarten School K-8", "Kindergarten School K-9", "Percent Kids in Kindergarten School Recieving Free Lunch", "% Kids bused in Kindergarten School"))
library(tidyverse)
library(dplyr)
library(flextable)
library(grid)
library(gridExtra)
library(cowplot)
library(stargazer)
library(scales)
library(pROC)
library(patchwork)
library(survminer)
library(ggsci)
library(survival)
library(foreign)
library(kableExtra)
library(ggplot2)
library(broom)
library(GGally)
library(tidyr)
library(knitr)
library(xtable)
students <- read.table("/Users/Sanscubed/Desktop/Thesis/Thesis_data/STAR_Archive/STAR_Students.tab", header = T, sep = "\t", fill = TRUE)
comparison_students <- read.table("/Users/Sanscubed/Desktop/Thesis/Thesis_data/STAR_Archive/Comparison_Students.tab", header = T, sep = "\t", fill = TRUE)
schools_spss <- read.spss("/Users/Sanscubed/Desktop/Thesis/Thesis_data/STAR_Archive/Project STAR/STAR_K-3_Schools.sav", to.data.frame=TRUE)
schools <- read.table("/Users/Sanscubed/Desktop/Thesis/Thesis_data/STAR_Archive/STAR_K-3_Schools.tab", header = T, sep = "\t", fill = TRUE)
# Converting test scores to numeric types
students$g1tmathss <- as.numeric(students$g1tmathss)
students$g1treadss <- as.numeric(students$g1treadss)
students$g1tlistss <- as.numeric(students$g1tlistss)
students$g1wordskillss <- as.numeric(students$g1wordskillss)
students$gktmathss <- as.numeric(students$gktmathss)
students$gktreadss <- as.numeric(students$gktreadss)
students$gktlistss <- as.numeric(students$gktlistss)
students$gkwordskillss <- as.numeric(students$gkwordskillss)
students$g2tmathss <- as.numeric(students$g2tmathss)
students$g3tmathss <- as.numeric(students$g3tmathss)
students <- students %>%
rename(flagsgk = var6, flagsg1 = var7, flagsg2 = var8, flagsg3 = var9)
students_survival <- students %>%
filter(yearsstar != 0, gkschid != 128068 | gkschid != 180344 | gkschid != 205489 | gkschid != 216536 | gkschid != 244818)
survival_k_entry <- students %>%
filter(flagsgk == 1) %>%
mutate(did_leave = case_when(yearsstar == 4 ~ 0, yearsstar != 4 ~ 1), when_first_leave = case_when(flagsg1 == 1 & flagsg2 == 1 & flagsg3 == 1 ~ 0,flagsg1 == 0 ~ 1, flagsg2 == 0 & flagsg1 == 1 ~ 2, flagsg1 == 1 & flagsg2 == 1 & flagsg3 == 0 ~ 3)) %>%
mutate(years_until_first_leave = case_when(when_first_leave == 0 ~ 4, when_first_leave == 1 ~ 1, when_first_leave == 2 ~ 2, when_first_leave == 3 ~ 3))
# Using Mine
fit_ct <- survfit(Surv(years_until_first_leave, did_leave) ~ gkfreelunch, data = survival_k_entry)
income_plot <- ggsurvplot(fit_ct, data = survival_k_entry, pval = TRUE, title = "Survival Probabilities by Free Lunch Status in Kindergarten", subtitle = "Among Kindergarten Entry Cohort", risk.table = TRUE,
tables.height = 0.2, risk.table.title = "Number at risk:",
tables.theme = theme_cleantable(),
xlab = "Years in Experiment", ylab = "Estimated Survival Probability",
conf.int = T, censor = T,legend.labs = c("Free Lunch", "Non-Free Lunch"), palette = "nejm", ggtheme = theme_pubr())
ggsave("Survival_Income.pdf", plot = ggarrange(income_plot$plot, income_plot$table, nrow=2, ncol=1, heights=c(3,1)), path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
survival_k_entry <- survival_k_entry %>%
mutate(total_math_reading_k = gktmathss + gktreadss + gktlistss + gkwordskillss) %>%
mutate(gk_ability_quartile = ntile(total_math_reading_k, 100)) %>%
mutate(gk_ability_category = case_when(gk_ability_quartile <= 25 ~ 1, gk_ability_quartile > 25 & gk_ability_quartile < 75 ~ 2, gk_ability_quartile >= 75 ~ 3))
fit_ct <- survfit(Surv(years_until_first_leave, did_leave) ~ gk_ability_category, data = survival_k_entry)
ability_plot <- ggsurvplot(fit_ct, data = survival_k_entry, title = "Survival Probabilities by Kindergarten Test Scores", subtitle = "Among Kindergarten Entry Cohort",
xlab = "Years in Experiment", ylab = "Estimated Survival Probability",
conf.int = T, censor = T,legend.labs = c("25th Percentile or Below", "Between 25th-75th Percentiles", "75th+ Percentile"), risk.table = TRUE,
tables.height = 0.5, risk.table.title = "Number at risk:",
tables.theme = theme_cleantable(), palette = "nejm", ggtheme = theme_pubr(), pval = TRUE)
ggsave("Survival_Ability.pdf", plot = ggarrange(ability_plot$plot, ability_plot$table, nrow=2, ncol=1, heights=c(3,1)), path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
# Using Mine
fit_ct <- survfit(Surv(years_until_first_leave, did_leave) ~ gkclasstype, data = survival_k_entry)
classtype_plot <- ggsurvplot(fit_ct, data = survival_k_entry, title = "Survival Probabilities by Kindergarten Class Type", subtitle = "Among Kindergarten Entry Cohort",
xlab = "Years in Experiment", ylab = "Estimated Survival Probability",
conf.int = T, censor = T,legend.labs = c("Small", "Regular", "Aide"), risk.table = TRUE,
tables.height = 0.5, risk.table.title = "Number at risk:",
tables.theme = theme_cleantable(), palette = "nejm", ggtheme = theme_pubr(), pval = TRUE)
ggsave("Survival_ClassType.pdf", plot = ggarrange(classtype_plot$plot, classtype_plot$table, nrow=2, ncol=1, heights=c(3,1)), path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
fit_ct <- survfit(Surv(years_until_first_leave, did_leave) ~ gksurban, data = survival_k_entry)
schoolurb_plot <- ggsurvplot(fit_ct, data = survival_k_entry, title = "Survival Probabilities by Kindergarten School Urbanicity", subtitle = "Among Kindergarten Entry Cohort",
xlab = "Years in Experiment", ylab = "Estimated Survival Probability",
conf.int = T, censor = T,legend.labs = c("Inner City", "Suburban", "Rural", "Urban"), risk.table = TRUE,
tables.height = 0.5, risk.table.title = "Number at risk:",
tables.theme = theme_cleantable(), palette = "nejm", ggtheme = theme_pubr(), pval = TRUE)
ggsave("Survival_SchoolType.pdf", plot = ggarrange(schoolurb_plot$plot, schoolurb_plot$table, nrow=2, ncol=1, heights=c(3,1)), path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
# -	Vars of interest:
# switched classes (disaggregate into stayed same, switched from regular to small, switched from small to larger),
#
# -	Controls:
# kindergarten school grade range, exit school grade range, if the school left the experiment, percent students receiving free/reduced lunch in K, percent students bused in K
survival_k_entry <- survival_k_entry %>%
mutate(switched_schools = case_when(when_first_leave == 0 ~ gkschid!=g3schid, when_first_leave == 1 ~ FALSE, when_first_leave == 2 ~ gkschid!=g1schid, when_first_leave == 3 ~ gkschid!=g2schid), switched_classes = case_when(when_first_leave == 0 ~ gkclasstype!=g3classtype, when_first_leave == 1 ~ FALSE, when_first_leave == 2 ~ gkclasstype!=g1classtype, when_first_leave == 3 ~ gkclasstype!=g1classtype))
schools_k <- schools %>%
select(schid, var2, var3, var9, var10) %>%
rename(gkschid = "schid", grdrange = "var2", flag_sk = "var3", gk_fl = "var9", gk_bus = "var10") %>%
filter(flag_sk == 1)
regression_surv_k <- merge(survival_k_entry,schools_k,by="gkschid")
# Model of attrition between k to 1st grade, note teacher gender not controlled for as there are only female teachers in gk
weibull_k_entry <- survreg(Surv(years_until_first_leave, did_leave)  ~ as.factor(gkfreelunch) + as.factor(gksurban)  + as.factor(gkclasstype)  + as.factor(gk_ability_category) + as.factor(gender) + as.factor(race) + gktyears + as.factor(gkspeced) + as.factor(gkspecin) + gkabsent + as.factor(grdrange) + gk_fl + gk_bus,
data=regression_surv_k, dist = "weibull")
#weibull_k_entry$coefficients <- exp(weibull_k_entry$coefficients)
#Model summary
# summary(weibull_k_entry)
# Model for those who were able to switch classes/schools
regression_surv_k2 <- regression_surv_k %>%
filter(when_first_leave != 1)
weibull_k_entry_nonfirst <- survreg(Surv(years_until_first_leave, did_leave)  ~ as.factor(gkfreelunch) + as.factor(gksurban) + as.factor(switched_schools) + as.factor(gkclasstype) + as.factor(switched_classes) + as.factor(gk_ability_category) + as.factor(gender) + as.factor(race) + gktyears + as.factor(gkspeced) + as.factor(gkspecin) + gkabsent + as.factor(grdrange) + gk_fl + gk_bus,
data=regression_surv_k2, dist = "weibull")
#summary(weibull_k_entry_nonfirst)
#Knitting Model summary into a readable table for view in PDF format
complete_table <- stargazer(weibull_k_entry, weibull_k_entry_nonfirst, title="Coefficient-Level Estimates for AFT Model of Attrition for Kindergarten Entry Cohort", align=TRUE, type = 'latex', header = FALSE, single.row = FALSE, column.sep.width = "3pt", font.size = "small", omit.stat=c("f"), model.names = FALSE, notes.align = "l", covariate.labels = c("Non-Free Lunch", "School Suburban", "School Rural", "School Urban", "Switched Schools", "Regular Class", "Regular Class w/ Aide", "Switched Class Types", "Kindergarten Test Score Between 25th-75th Percentile", "Kindergarten Test Score Above 75th Percentile", "Student Gender: Female", "Student Race: Black", "Student Race: Asian", "Student Race: Hispanic", "Student Race: Native American", "Student Race: Other", "Teacher Experience (yrs.)", "Not Special Education", "Not Pulled Out for Special Instruction", "Days Absent", "Kindergarten School K-4", "Kindergarten School K-5", "Kindergarten School K-6", "Kindergarten School K-7", "Kindergarten School K-8", "Kindergarten School K-9", "Percent Kids in Kindergarten School Recieving Free Lunch", "% Kids bused in Kindergarten School"))
# Compressed Table
compressed_table <- stargazer(weibull_k_entry, weibull_k_entry_nonfirst, title="Coefficient-Level Estimates for AFT Model of Attrition for Kindergarten Entry Cohort", align=TRUE, type = 'latex', header = FALSE, single.row = FALSE, column.sep.width = "3pt", font.size = "small", omit.stat=c("f"), model.names = FALSE, notes.align = "l", omit = c("gender", "race", "gktyears", "gkabsent", "grdrange", "gk_fl", "gk_bus"), add.lines=list(c("Controls", "  Yes", "  Yes")), covariate.labels = c("Non-Free Lunch", "School Suburban", "School Rural", "School Urban", "Switched Schools", "Regular Class", "Regular Class w/ Aide", "Switched Class Types", "Kindergarten Test Score Between 25th-75th Percentile", "Kindergarten Test Score Above 75th Percentile", "Not Special Education", "Not Pulled Out for Special Instruction"))
pdf(file = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/AFT_Diagnostic_1.pdf")
par(mfrow = c(1,2), cex = .6, mai=c(0.5,0.5,0.5,0.5))
resids <- (log(regression_surv_k$years_until_first_leave) - weibull_k_entry$linear.predictors) / (weibull_k_entry$scale)
rmod <- survfit(Surv(resids, did_leave) ~ 1, data = regression_surv_k)
a <- plot(rmod, main = "Distributional Convergence - AFT Model (1)", xlab = "Residuals for AFT Model of Attrition for Kindergarten Entry Cohort", ylab = "Survival Probability")
exp.x <- seq(min(resids), max(resids), length = 100)
exp.y <- plogis(exp.x, lower.tail = F) # F(t)
lines(exp.x, exp.y, col = "red", lwd = 2)
resids <- (log(regression_surv_k2$years_until_first_leave) - weibull_k_entry_nonfirst$linear.predictors) / (weibull_k_entry_nonfirst$scale)
rmod <- survfit(Surv(resids, did_leave) ~ 1, data = regression_surv_k2)
b <- plot(rmod, main = "Distributional Convergence - AFT Model (2)", xlab = "", ylab = "Survival Probability")
mtext("Residuals for AFT Model of Attrition for Kindergarten Entry Cohort, \n Excluding Students who Left Before 1st Grade", side=1, line=3, cex = .6)
exp.x <- seq(min(resids), max(resids), length = 100)
exp.y <- plogis(exp.x, lower.tail = F) # F(t)
lines(exp.x, exp.y, col = "red", lwd = 2)
dev.off()
survival_1_entry <- students %>%
filter(flagsgk == 0 && flagsg1 == 1) %>%
mutate(did_leave = case_when(yearsstar == 3 ~ 0, yearsstar != 3 ~ 1), when_first_leave = case_when(flagsg2 == 1 & flagsg3 == 1 ~ 0, flagsg2 == 0 ~ 1, flagsg2 == 1 & flagsg3 == 0 ~ 2)) %>%
mutate(years_until_first_leave = case_when(when_first_leave == 0 ~ 3, when_first_leave == 1 ~ 1, when_first_leave == 2 ~ 2)) %>%
mutate(total_math_reading_1 = g1tmathss + g1treadss + g1tlistss + g1wordskillss) %>%
mutate(g1_ability_quartile = ntile(total_math_reading_1, 100)) %>%
mutate(g1_ability_category = case_when(g1_ability_quartile <= 25 ~ 1, g1_ability_quartile > 25 & g1_ability_quartile < 75 ~ 2, g1_ability_quartile >= 75 ~ 3)) %>%
mutate(switched_schools = case_when(when_first_leave == 0 ~ g1schid!=g3schid, when_first_leave == 1 ~ FALSE, when_first_leave == 2 ~ g1schid!=g2schid), switched_classes = case_when(when_first_leave == 0 ~ g1classtype!=g3classtype, when_first_leave == 1 ~ FALSE, when_first_leave == 2 ~ g1classtype!=g2classtype))
schools_1 <- schools %>%
select(schid, var2, var4, var21, var22) %>%
rename(g1schid = "schid", grdrange = "var2", flag_s1 = "var4", g1_fl = "var21", g1_bus = "var22") %>%
filter(flag_s1 == 1)
regression_surv_1 <- merge(survival_1_entry,schools_1,by="g1schid")
# Model for 1st grade entry cohort
weibull_1_entry <- survreg(Surv(years_until_first_leave, did_leave)  ~ as.factor(g1freelunch) + as.factor(g1surban)  + as.factor(g1classtype)  + as.factor(g1_ability_category) + as.factor(gender) + as.factor(race) + g1tyears + as.factor(g1speced) + as.factor(g1specin) + g1absent + as.factor(grdrange) + g1_fl + g1_bus,
data=regression_surv_1, dist = "weibull")
# Model for those who stayed past 1st grade
regression_surv_f2 <- regression_surv_1 %>%
filter(when_first_leave != 1)
weibull_1_entry2 <- survreg(Surv(years_until_first_leave, did_leave)  ~ as.factor(g1freelunch) + as.factor(g1surban) + as.factor(switched_schools) + as.factor(g1classtype) + as.factor(switched_classes) + as.factor(g1_ability_category) + as.factor(gender) + as.factor(race) + g1tyears + as.factor(g1speced) + as.factor(g1specin) + g1absent + as.factor(grdrange) + g1_fl + g1_bus,
data=regression_surv_f2, dist = "weibull")
#weibull_k_entry$coefficients <- exp(weibull_k_entry$coefficients)
#Model summary
#summary(weibull_1_entry)
#Model summary
#summary(weibull_1_entry2)
library(tidyverse)
library(dplyr)
library(flextable)
library(grid)
library(gridExtra)
library(cowplot)
library(stargazer)
library(scales)
library(pROC)
library(patchwork)
library(survminer)
library(ggsci)
library(survival)
library(foreign)
library(kableExtra)
library(ggplot2)
library(broom)
library(GGally)
library(tidyr)
library(knitr)
library(xtable)
students <- read.table("/Users/Sanscubed/Desktop/Thesis/Thesis_data/STAR_Archive/STAR_Students.tab", header = T, sep = "\t", fill = TRUE)
comparison_students <- read.table("/Users/Sanscubed/Desktop/Thesis/Thesis_data/STAR_Archive/Comparison_Students.tab", header = T, sep = "\t", fill = TRUE)
schools_spss <- read.spss("/Users/Sanscubed/Desktop/Thesis/Thesis_data/STAR_Archive/Project STAR/STAR_K-3_Schools.sav", to.data.frame=TRUE)
schools <- read.table("/Users/Sanscubed/Desktop/Thesis/Thesis_data/STAR_Archive/STAR_K-3_Schools.tab", header = T, sep = "\t", fill = TRUE)
# Converting test scores to numeric types
students$g1tmathss <- as.numeric(students$g1tmathss)
students$g1treadss <- as.numeric(students$g1treadss)
students$g1tlistss <- as.numeric(students$g1tlistss)
students$g1wordskillss <- as.numeric(students$g1wordskillss)
students$gktmathss <- as.numeric(students$gktmathss)
students$gktreadss <- as.numeric(students$gktreadss)
students$gktlistss <- as.numeric(students$gktlistss)
students$gkwordskillss <- as.numeric(students$gkwordskillss)
students$g2tmathss <- as.numeric(students$g2tmathss)
students$g3tmathss <- as.numeric(students$g3tmathss)
students <- students %>%
rename(flagsgk = var6, flagsg1 = var7, flagsg2 = var8, flagsg3 = var9)
students_survival <- students %>%
filter(yearsstar != 0, gkschid != 128068 | gkschid != 180344 | gkschid != 205489 | gkschid != 216536 | gkschid != 244818)
survival_k_entry <- students %>%
filter(flagsgk == 1) %>%
mutate(did_leave = case_when(yearsstar == 4 ~ 0, yearsstar != 4 ~ 1), when_first_leave = case_when(flagsg1 == 1 & flagsg2 == 1 & flagsg3 == 1 ~ 0,flagsg1 == 0 ~ 1, flagsg2 == 0 & flagsg1 == 1 ~ 2, flagsg1 == 1 & flagsg2 == 1 & flagsg3 == 0 ~ 3)) %>%
mutate(years_until_first_leave = case_when(when_first_leave == 0 ~ 4, when_first_leave == 1 ~ 1, when_first_leave == 2 ~ 2, when_first_leave == 3 ~ 3))
# Using Mine
fit_ct <- survfit(Surv(years_until_first_leave, did_leave) ~ gkfreelunch, data = survival_k_entry)
income_plot <- ggsurvplot(fit_ct, data = survival_k_entry, pval = TRUE, title = "Survival Probabilities by Free Lunch Status in Kindergarten", subtitle = "Among Kindergarten Entry Cohort", risk.table = TRUE,
tables.height = 0.2, risk.table.title = "Number at risk:",
tables.theme = theme_cleantable(),
xlab = "Years in Experiment", ylab = "Estimated Survival Probability",
conf.int = T, censor = T,legend.labs = c("Free Lunch", "Non-Free Lunch"), palette = "nejm", ggtheme = theme_pubr())
ggsave("Survival_Income.pdf", plot = ggarrange(income_plot$plot, income_plot$table, nrow=2, ncol=1, heights=c(3,1)), path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
survival_k_entry <- survival_k_entry %>%
mutate(total_math_reading_k = gktmathss + gktreadss + gktlistss + gkwordskillss) %>%
mutate(gk_ability_quartile = ntile(total_math_reading_k, 100)) %>%
mutate(gk_ability_category = case_when(gk_ability_quartile <= 25 ~ 1, gk_ability_quartile > 25 & gk_ability_quartile < 75 ~ 2, gk_ability_quartile >= 75 ~ 3))
fit_ct <- survfit(Surv(years_until_first_leave, did_leave) ~ gk_ability_category, data = survival_k_entry)
ability_plot <- ggsurvplot(fit_ct, data = survival_k_entry, title = "Survival Probabilities by Kindergarten Test Scores", subtitle = "Among Kindergarten Entry Cohort",
xlab = "Years in Experiment", ylab = "Estimated Survival Probability",
conf.int = T, censor = T,legend.labs = c("25th Percentile or Below", "Between 25th-75th Percentiles", "75th+ Percentile"), risk.table = TRUE,
tables.height = 0.5, risk.table.title = "Number at risk:",
tables.theme = theme_cleantable(), palette = "nejm", ggtheme = theme_pubr(), pval = TRUE)
ggsave("Survival_Ability.pdf", plot = ggarrange(ability_plot$plot, ability_plot$table, nrow=2, ncol=1, heights=c(3,1)), path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
# Using Mine
fit_ct <- survfit(Surv(years_until_first_leave, did_leave) ~ gkclasstype, data = survival_k_entry)
classtype_plot <- ggsurvplot(fit_ct, data = survival_k_entry, title = "Survival Probabilities by Kindergarten Class Type", subtitle = "Among Kindergarten Entry Cohort",
xlab = "Years in Experiment", ylab = "Estimated Survival Probability",
conf.int = T, censor = T,legend.labs = c("Small", "Regular", "Aide"), risk.table = TRUE,
tables.height = 0.5, risk.table.title = "Number at risk:",
tables.theme = theme_cleantable(), palette = "nejm", ggtheme = theme_pubr(), pval = TRUE)
ggsave("Survival_ClassType.pdf", plot = ggarrange(classtype_plot$plot, classtype_plot$table, nrow=2, ncol=1, heights=c(3,1)), path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
fit_ct <- survfit(Surv(years_until_first_leave, did_leave) ~ gksurban, data = survival_k_entry)
schoolurb_plot <- ggsurvplot(fit_ct, data = survival_k_entry, title = "Survival Probabilities by Kindergarten School Urbanicity", subtitle = "Among Kindergarten Entry Cohort",
xlab = "Years in Experiment", ylab = "Estimated Survival Probability",
conf.int = T, censor = T,legend.labs = c("Inner City", "Suburban", "Rural", "Urban"), risk.table = TRUE,
tables.height = 0.5, risk.table.title = "Number at risk:",
tables.theme = theme_cleantable(), palette = "nejm", ggtheme = theme_pubr(), pval = TRUE)
ggsave("Survival_SchoolType.pdf", plot = ggarrange(schoolurb_plot$plot, schoolurb_plot$table, nrow=2, ncol=1, heights=c(3,1)), path = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/")
# -	Vars of interest:
# switched classes (disaggregate into stayed same, switched from regular to small, switched from small to larger),
#
# -	Controls:
# kindergarten school grade range, exit school grade range, if the school left the experiment, percent students receiving free/reduced lunch in K, percent students bused in K
survival_k_entry <- survival_k_entry %>%
mutate(switched_schools = case_when(when_first_leave == 0 ~ gkschid!=g3schid, when_first_leave == 1 ~ FALSE, when_first_leave == 2 ~ gkschid!=g1schid, when_first_leave == 3 ~ gkschid!=g2schid), switched_classes = case_when(when_first_leave == 0 ~ gkclasstype!=g3classtype, when_first_leave == 1 ~ FALSE, when_first_leave == 2 ~ gkclasstype!=g1classtype, when_first_leave == 3 ~ gkclasstype!=g1classtype))
schools_k <- schools %>%
select(schid, var2, var3, var9, var10) %>%
rename(gkschid = "schid", grdrange = "var2", flag_sk = "var3", gk_fl = "var9", gk_bus = "var10") %>%
filter(flag_sk == 1)
regression_surv_k <- merge(survival_k_entry,schools_k,by="gkschid")
# Model of attrition between k to 1st grade, note teacher gender not controlled for as there are only female teachers in gk
weibull_k_entry <- survreg(Surv(years_until_first_leave, did_leave)  ~ as.factor(gkfreelunch) + as.factor(gksurban)  + as.factor(gkclasstype)  + as.factor(gk_ability_category) + as.factor(gender) + as.factor(race) + gktyears + as.factor(gkspeced) + as.factor(gkspecin) + gkabsent + as.factor(grdrange) + gk_fl + gk_bus,
data=regression_surv_k, dist = "weibull")
#weibull_k_entry$coefficients <- exp(weibull_k_entry$coefficients)
#Model summary
# summary(weibull_k_entry)
# Model for those who were able to switch classes/schools
regression_surv_k2 <- regression_surv_k %>%
filter(when_first_leave != 1)
weibull_k_entry_nonfirst <- survreg(Surv(years_until_first_leave, did_leave)  ~ as.factor(gkfreelunch) + as.factor(gksurban) + as.factor(switched_schools) + as.factor(gkclasstype) + as.factor(switched_classes) + as.factor(gk_ability_category) + as.factor(gender) + as.factor(race) + gktyears + as.factor(gkspeced) + as.factor(gkspecin) + gkabsent + as.factor(grdrange) + gk_fl + gk_bus,
data=regression_surv_k2, dist = "weibull")
#summary(weibull_k_entry_nonfirst)
#Knitting Model summary into a readable table for view in PDF format
complete_table <- stargazer(weibull_k_entry, weibull_k_entry_nonfirst, title="Coefficient-Level Estimates for AFT Model of Attrition for Kindergarten Entry Cohort", align=TRUE, type = 'latex', header = FALSE, single.row = FALSE, column.sep.width = "3pt", font.size = "small", omit.stat=c("f"), model.names = FALSE, notes.align = "l", covariate.labels = c("Non-Free Lunch", "School Suburban", "School Rural", "School Urban", "Switched Schools", "Regular Class", "Regular Class w/ Aide", "Switched Class Types", "Kindergarten Test Score Between 25th-75th Percentile", "Kindergarten Test Score Above 75th Percentile", "Student Gender: Female", "Student Race: Black", "Student Race: Asian", "Student Race: Hispanic", "Student Race: Native American", "Student Race: Other", "Teacher Experience (yrs.)", "Not Special Education", "Not Pulled Out for Special Instruction", "Days Absent", "Kindergarten School K-4", "Kindergarten School K-5", "Kindergarten School K-6", "Kindergarten School K-7", "Kindergarten School K-8", "Kindergarten School K-9", "Percent Kids in Kindergarten School Recieving Free Lunch", "% Kids bused in Kindergarten School"))
# Compressed Table
compressed_table <- stargazer(weibull_k_entry, weibull_k_entry_nonfirst, title="Coefficient-Level Estimates for AFT Model of Attrition for Kindergarten Entry Cohort", align=TRUE, type = 'latex', header = FALSE, single.row = FALSE, column.sep.width = "3pt", font.size = "small", omit.stat=c("f"), model.names = FALSE, notes.align = "l", omit = c("gender", "race", "gktyears", "gkabsent", "grdrange", "gk_fl", "gk_bus"), add.lines=list(c("Controls", "  Yes", "  Yes")), covariate.labels = c("Non-Free Lunch", "School Suburban", "School Rural", "School Urban", "Switched Schools", "Regular Class", "Regular Class w/ Aide", "Switched Class Types", "Kindergarten Test Score Between 25th-75th Percentile", "Kindergarten Test Score Above 75th Percentile", "Not Special Education", "Not Pulled Out for Special Instruction"))
pdf(file = "/Users/Sanscubed/Desktop/Thesis/Thesis_figures/AFT_Diagnostic_1.pdf")
par(mfrow = c(1,2), cex = .6, mai=c(0.5,0.5,0.5,0.5))
resids <- (log(regression_surv_k$years_until_first_leave) - weibull_k_entry$linear.predictors) / (weibull_k_entry$scale)
rmod <- survfit(Surv(resids, did_leave) ~ 1, data = regression_surv_k)
a <- plot(rmod, main = "Distributional Convergence - AFT Model (1)", xlab = "Residuals for AFT Model of Attrition for Kindergarten Entry Cohort", ylab = "Survival Probability")
exp.x <- seq(min(resids), max(resids), length = 100)
exp.y <- plogis(exp.x, lower.tail = F) # F(t)
lines(exp.x, exp.y, col = "red", lwd = 2)
resids <- (log(regression_surv_k2$years_until_first_leave) - weibull_k_entry_nonfirst$linear.predictors) / (weibull_k_entry_nonfirst$scale)
rmod <- survfit(Surv(resids, did_leave) ~ 1, data = regression_surv_k2)
b <- plot(rmod, main = "Distributional Convergence - AFT Model (2)", xlab = "", ylab = "Survival Probability")
mtext("Residuals for AFT Model of Attrition for Kindergarten Entry Cohort, \n Excluding Students who Left Before 1st Grade", side=1, line=3, cex = .6)
exp.x <- seq(min(resids), max(resids), length = 100)
exp.y <- plogis(exp.x, lower.tail = F) # F(t)
lines(exp.x, exp.y, col = "red", lwd = 2)
dev.off()
survival_1_entry <- students %>%
filter(flagsgk == 0 && flagsg1 == 1) %>%
mutate(did_leave = case_when(yearsstar == 3 ~ 0, yearsstar != 3 ~ 1), when_first_leave = case_when(flagsg2 == 1 & flagsg3 == 1 ~ 0, flagsg2 == 0 ~ 1, flagsg2 == 1 & flagsg3 == 0 ~ 2)) %>%
mutate(years_until_first_leave = case_when(when_first_leave == 0 ~ 3, when_first_leave == 1 ~ 1, when_first_leave == 2 ~ 2)) %>%
mutate(total_math_reading_1 = g1tmathss + g1treadss + g1tlistss + g1wordskillss) %>%
mutate(g1_ability_quartile = ntile(total_math_reading_1, 100)) %>%
mutate(g1_ability_category = case_when(g1_ability_quartile <= 25 ~ 1, g1_ability_quartile > 25 & g1_ability_quartile < 75 ~ 2, g1_ability_quartile >= 75 ~ 3)) %>%
mutate(switched_schools = case_when(when_first_leave == 0 ~ g1schid!=g3schid, when_first_leave == 1 ~ FALSE, when_first_leave == 2 ~ g1schid!=g2schid), switched_classes = case_when(when_first_leave == 0 ~ g1classtype!=g3classtype, when_first_leave == 1 ~ FALSE, when_first_leave == 2 ~ g1classtype!=g2classtype))
schools_1 <- schools %>%
select(schid, var2, var4, var21, var22) %>%
rename(g1schid = "schid", grdrange = "var2", flag_s1 = "var4", g1_fl = "var21", g1_bus = "var22") %>%
filter(flag_s1 == 1)
regression_surv_1 <- merge(survival_1_entry,schools_1,by="g1schid")
# Model for 1st grade entry cohort
weibull_1_entry <- survreg(Surv(years_until_first_leave, did_leave)  ~ as.factor(g1freelunch) + as.factor(g1surban)  + as.factor(g1classtype)  + as.factor(g1_ability_category) + as.factor(gender) + as.factor(race) + g1tyears + as.factor(g1speced) + as.factor(g1specin) + g1absent + as.factor(grdrange) + g1_fl + g1_bus,
data=regression_surv_1, dist = "weibull")
# Model for those who stayed past 1st grade
regression_surv_f2 <- regression_surv_1 %>%
filter(when_first_leave != 1)
weibull_1_entry2 <- survreg(Surv(years_until_first_leave, did_leave)  ~ as.factor(g1freelunch) + as.factor(g1surban) + as.factor(switched_schools) + as.factor(g1classtype) + as.factor(switched_classes) + as.factor(g1_ability_category) + as.factor(gender) + as.factor(race) + g1tyears + as.factor(g1speced) + as.factor(g1specin) + g1absent + as.factor(grdrange) + g1_fl + g1_bus,
data=regression_surv_f2, dist = "weibull")
#weibull_k_entry$coefficients <- exp(weibull_k_entry$coefficients)
#Model summary
#summary(weibull_1_entry)
#Model summary
#summary(weibull_1_entry2)
complete_table_first <- stargazer(weibull_1_entry, weibull_1_entry2, title="Coefficient-Level Estimates for AFT Model of Attrition for 1st Grade Entry Cohort", align=TRUE, type = 'latex', header = FALSE, single.row = FALSE, column.sep.width = "3pt", font.size = "small", omit.stat=c("f"), model.names = FALSE, notes.align = "l", covariate.labels = c("Non-Free Lunch", "School Suburban", "School Rural", "School Urban", "Switched Schools", "Regular Class", "Regular Class w/ Aide", "Switched Class Types", "1st Grade Test Score Between 25th-75th Percentile", "1st Grade Test Score Above 75th Percentile", "Student Gender: Female", "Student Race: Black", "Student Race: Asian", "Student Race: Hispanic", "Student Race: Native American", "Student Race: Other", "Teacher Experience (yrs.)", "Not Special Education", "Not Pulled Out for Special Instruction", "Days Absent", "1st Grade School K-4", "1st Grade School K-5", "1st Grade School K-6", "1st Grade School K-7", "1st Grade School K-8", "1st Grade School K-9", "Percent Kids in 1st Grade School Recieving Free Lunch", "% Kids bused in 1st Grade School"))
peereffects_no_fe <- felm(total_math_reading_1 ~ total_math_reading_k + prop_leavers + leaver_mean + leaver_variance + prop_leavers * leaver_mean + prop_leavers * leaver_variance + as.factor(is_smallk) + as.factor(is_small1) + leave_one_out_avgk + as.factor(race) + as.factor(gender) + as.factor(gkfreelunch) + gkabsent + g1absent + as.factor(gkspeced) + as.factor(gkspecin) + as.factor(g1speced) + as.factor(g1specin) + as.factor(gktrace) + as.factor(gkt_masters) + gktyears + as.factor(g1trace) + as.factor(g1t_masters) + g1tyears + as.factor(gksurban)| 0 | 0 |gktchid, data = peereffect_k1_reg_data)
summary(peereffects_no_fe)
